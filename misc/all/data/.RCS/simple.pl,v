head	1.19;
access;
symbols;
locks
	eb:1.19; strict;
comment	@# @;
expand	@o@;


1.19
date	2015.01.10.01.52.09;	author eb;	state Exp;
branches;
next	1.18;

1.18
date	2015.01.10.01.51.37;	author eb;	state Exp;
branches;
next	1.17;

1.17
date	2015.01.10.01.50.31;	author eb;	state Exp;
branches;
next	1.16;

1.16
date	2015.01.10.01.50.29;	author eb;	state Exp;
branches;
next	1.15;

1.15
date	2015.01.10.01.49.02;	author eb;	state Exp;
branches;
next	1.14;

1.14
date	2015.01.10.01.42.44;	author eb;	state Exp;
branches;
next	1.13;

1.13
date	2015.01.10.01.42.19;	author eb;	state Exp;
branches;
next	1.12;

1.12
date	2015.01.09.03.03.04;	author eb;	state Exp;
branches;
next	1.11;

1.11
date	2015.01.09.03.02.46;	author eb;	state Exp;
branches;
next	1.10;

1.10
date	2015.01.09.03.02.01;	author eb;	state Exp;
branches;
next	1.9;

1.9
date	2015.01.09.03.01.13;	author eb;	state Exp;
branches;
next	1.8;

1.8
date	2015.01.09.03.00.12;	author eb;	state Exp;
branches;
next	1.7;

1.7
date	2015.01.09.02.59.26;	author eb;	state Exp;
branches;
next	1.6;

1.6
date	2015.01.09.02.57.49;	author eb;	state Exp;
branches;
next	1.5;

1.5
date	2015.01.09.02.57.19;	author eb;	state Exp;
branches;
next	1.4;

1.4
date	2015.01.09.02.55.24;	author eb;	state Exp;
branches;
next	1.3;

1.3
date	2015.01.09.02.54.00;	author eb;	state Exp;
branches;
next	1.2;

1.2
date	2015.01.09.02.51.31;	author eb;	state Exp;
branches;
next	1.1;

1.1
date	2015.01.07.10.48.56;	author eb;	state Exp;
branches;
next	;


desc
@vim
@


1.19
log
@vim
@
text
@use Term::ANSIColor qw(:constants);
my $red   = "\e[4;31m";
my $reset = "\e[0m";

sub run_simple_tests {

    my ( $simpleLines, $target, $results, $number ) = @@_;

    $x = 0;
    my $test = @@{$number};
    foreach ( @@{$simpleLines} ) {
        my @@field = split /\t/, @@{$simpleLines}[$x];
        chomp @@field;
        for ( my $i = 0 ; $i < scalar $test ; $i++ ) {
            if ( $$target[$i] =~ /$field[0]/ ) {
                if ( $$target[$i] =~ s/\b($field[0])\b/$red$1$reset/ ) {
                    print "${$target}[$i]\n", RED, "$field[0]",
                      YELLOW, "--->", BLUE, "$field[1]\n\n", RESET;
                    ${$results}{"id=\"$$number[$i]\""}{simple}{ $field[0] } +=
                      1;
                }
            }
        }
        $x += 1;
    }
}
1;
@


1.18
log
@vim
@
text
@a15 1

@


1.17
log
@vim
@
text
@d15 1
a15 1
            if ( $$target[$i] =~ /\b$field[0]\b/ ) {
@


1.16
log
@vim
@
text
@d15 1
a15 1
if ($$target[$i] =~/\b$field[0]\b/) {
d17 6
a22 5

            if ( $$target[$i] =~ s/\b($field[0])\b/$red$1$reset/ ) {
                print "${$target}[$i]\n", RED, "$field[0]",
                  YELLOW, "--->", BLUE, "$field[1]\n\n", RESET;
                ${$results}{"id=\"$$number[$i]\""}{simple}{ $field[0] } += 1;
d24 1
a24 1
        }}
@


1.15
log
@vim
@
text
@d15 4
a18 1
            if ( ${$target}[$i] =~ s/\b($field[0])\b/$red$1$reset/ ) {
d23 1
a23 1
        }
@


1.14
log
@vim
@
text
@d18 1
a18 1
                ${$results}{"id=\"${$number}[$i]\""}{simple}{ $field[0] } += 1;
@


1.13
log
@vim
@
text
@d7 1
a7 1
my ($simpleLines, $target, $results, $number) = @@_;
d10 1
a10 1
my $test = @@{$number};
d15 1
a15 1
                if ( ${$target}[$i] =~ s/\b($field[0])\b/$red$1$reset/ ) {
@


1.12
log
@vim
@
text
@d6 3
a8 4
    my $simpleLines = shift;
    my $target      = shift;
    my $results     = shift;
    my $number      = shift;
@


1.11
log
@vim
@
text
@d11 1
a11 1
my $test = ${$number};
@


1.10
log
@vim
@
text
@d11 1
d15 1
a15 1
        for ( my $i = 0 ; $i < scalar ${$number} ; $i++ ) {
@


1.9
log
@vim
@
text
@d14 1
a14 3
        for ( my $i = 0 ; $i < scalar ${number} ; $i++ ) {
            print "$field[0]", "\n";
            next;
@


1.8
log
@vim
@
text
@d15 3
a17 1
            if ( ${$target}[$i] =~ s/\b($field[0])\b/$red$1$reset/ ) {
@


1.7
log
@vim
@
text
@d10 1
a10 1
    $i = 0;
d12 1
a12 1
        my @@field = split /\t/, @@{$simpleLines}[$i];
d21 1
a21 1
        $i += 1;
@


1.6
log
@vim
@
text
@a10 2
print ${$target}[100], "\n\n";
die;
@


1.5
log
@vim
@
text
@d11 1
a11 1
print $target, "\n\n";
@


1.4
log
@vim
@
text
@d11 2
@


1.3
log
@vim
@
text
@d16 1
a16 1
                print "$target\n", RED, "$field[0]",
@


1.2
log
@vim
@
text
@d14 6
a19 6
        for (my $i=0;$i < scalar ${number};$i++){

            if ( $target =~ s/\b($field[0])\b/$red$1$reset/ ) {
            print "$target\n", RED, "$field[0]",
              YELLOW, "--->", BLUE, "$field[1]\n\n", RESET;
            ${$results}{"id=\"$number\""}{simple}{ $field[0] } += 1;
d21 1
a21 2
}        
$i += 1;
@


1.1
log
@vim
@
text
@d14 3
a16 1
        if ( $target =~ s/\b($field[0])\b/$red$1$reset/ ) {
d21 2
a22 1
        $i += 1;
@
