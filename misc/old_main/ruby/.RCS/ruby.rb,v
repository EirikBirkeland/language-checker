head	1.122;
access;
symbols;
locks
	eb:1.122; strict;
comment	@# @;
expand	@o@;


1.122
date	2015.01.18.19.43.39;	author eb;	state Exp;
branches;
next	1.121;

1.121
date	2015.01.18.19.22.33;	author eb;	state Exp;
branches;
next	1.120;

1.120
date	2015.01.18.19.22.16;	author eb;	state Exp;
branches;
next	1.119;

1.119
date	2015.01.18.19.20.16;	author eb;	state Exp;
branches;
next	1.118;

1.118
date	2015.01.18.19.20.08;	author eb;	state Exp;
branches;
next	1.117;

1.117
date	2015.01.18.19.19.56;	author eb;	state Exp;
branches;
next	1.116;

1.116
date	2015.01.18.19.19.46;	author eb;	state Exp;
branches;
next	1.115;

1.115
date	2015.01.18.18.43.02;	author eb;	state Exp;
branches;
next	1.114;

1.114
date	2015.01.18.18.42.40;	author eb;	state Exp;
branches;
next	1.113;

1.113
date	2015.01.18.18.42.30;	author eb;	state Exp;
branches;
next	1.112;

1.112
date	2015.01.18.18.42.13;	author eb;	state Exp;
branches;
next	1.111;

1.111
date	2015.01.18.18.41.57;	author eb;	state Exp;
branches;
next	1.110;

1.110
date	2015.01.17.20.13.53;	author eb;	state Exp;
branches;
next	1.109;

1.109
date	2015.01.17.20.12.10;	author eb;	state Exp;
branches;
next	1.108;

1.108
date	2015.01.17.20.11.50;	author eb;	state Exp;
branches;
next	1.107;

1.107
date	2015.01.17.20.11.25;	author eb;	state Exp;
branches;
next	1.106;

1.106
date	2015.01.17.20.11.07;	author eb;	state Exp;
branches;
next	1.105;

1.105
date	2015.01.17.20.10.53;	author eb;	state Exp;
branches;
next	1.104;

1.104
date	2015.01.17.20.10.30;	author eb;	state Exp;
branches;
next	1.103;

1.103
date	2015.01.17.20.09.55;	author eb;	state Exp;
branches;
next	1.102;

1.102
date	2015.01.17.20.09.46;	author eb;	state Exp;
branches;
next	1.101;

1.101
date	2015.01.17.20.08.11;	author eb;	state Exp;
branches;
next	1.100;

1.100
date	2015.01.17.20.08.00;	author eb;	state Exp;
branches;
next	1.99;

1.99
date	2015.01.17.20.07.41;	author eb;	state Exp;
branches;
next	1.98;

1.98
date	2015.01.17.20.06.00;	author eb;	state Exp;
branches;
next	1.97;

1.97
date	2015.01.17.20.05.40;	author eb;	state Exp;
branches;
next	1.96;

1.96
date	2015.01.17.20.04.59;	author eb;	state Exp;
branches;
next	1.95;

1.95
date	2015.01.17.20.04.46;	author eb;	state Exp;
branches;
next	1.94;

1.94
date	2015.01.17.20.04.15;	author eb;	state Exp;
branches;
next	1.93;

1.93
date	2015.01.17.20.04.06;	author eb;	state Exp;
branches;
next	1.92;

1.92
date	2015.01.17.20.03.27;	author eb;	state Exp;
branches;
next	1.91;

1.91
date	2015.01.17.20.02.52;	author eb;	state Exp;
branches;
next	1.90;

1.90
date	2015.01.17.20.00.42;	author eb;	state Exp;
branches;
next	1.89;

1.89
date	2015.01.17.19.56.23;	author eb;	state Exp;
branches;
next	1.88;

1.88
date	2015.01.17.19.55.50;	author eb;	state Exp;
branches;
next	1.87;

1.87
date	2015.01.17.19.53.43;	author eb;	state Exp;
branches;
next	1.86;

1.86
date	2015.01.17.19.53.04;	author eb;	state Exp;
branches;
next	1.85;

1.85
date	2015.01.17.19.52.38;	author eb;	state Exp;
branches;
next	1.84;

1.84
date	2015.01.17.19.52.28;	author eb;	state Exp;
branches;
next	1.83;

1.83
date	2015.01.17.19.51.14;	author eb;	state Exp;
branches;
next	1.82;

1.82
date	2015.01.17.19.50.45;	author eb;	state Exp;
branches;
next	1.81;

1.81
date	2015.01.17.19.50.17;	author eb;	state Exp;
branches;
next	1.80;

1.80
date	2015.01.17.19.50.04;	author eb;	state Exp;
branches;
next	1.79;

1.79
date	2015.01.17.19.49.33;	author eb;	state Exp;
branches;
next	1.78;

1.78
date	2015.01.17.19.49.18;	author eb;	state Exp;
branches;
next	1.77;

1.77
date	2015.01.17.19.45.56;	author eb;	state Exp;
branches;
next	1.76;

1.76
date	2015.01.17.19.45.51;	author eb;	state Exp;
branches;
next	1.75;

1.75
date	2015.01.17.19.45.32;	author eb;	state Exp;
branches;
next	1.74;

1.74
date	2015.01.17.19.44.06;	author eb;	state Exp;
branches;
next	1.73;

1.73
date	2015.01.17.19.43.48;	author eb;	state Exp;
branches;
next	1.72;

1.72
date	2015.01.17.19.43.34;	author eb;	state Exp;
branches;
next	1.71;

1.71
date	2015.01.17.19.43.23;	author eb;	state Exp;
branches;
next	1.70;

1.70
date	2015.01.17.19.43.07;	author eb;	state Exp;
branches;
next	1.69;

1.69
date	2015.01.17.19.37.19;	author eb;	state Exp;
branches;
next	1.68;

1.68
date	2015.01.17.19.36.37;	author eb;	state Exp;
branches;
next	1.67;

1.67
date	2015.01.17.19.36.07;	author eb;	state Exp;
branches;
next	1.66;

1.66
date	2015.01.17.19.35.58;	author eb;	state Exp;
branches;
next	1.65;

1.65
date	2015.01.17.19.33.53;	author eb;	state Exp;
branches;
next	1.64;

1.64
date	2015.01.17.19.31.26;	author eb;	state Exp;
branches;
next	1.63;

1.63
date	2015.01.17.19.31.10;	author eb;	state Exp;
branches;
next	1.62;

1.62
date	2015.01.17.19.28.02;	author eb;	state Exp;
branches;
next	1.61;

1.61
date	2015.01.17.19.27.56;	author eb;	state Exp;
branches;
next	1.60;

1.60
date	2015.01.17.19.27.47;	author eb;	state Exp;
branches;
next	1.59;

1.59
date	2015.01.17.19.25.22;	author eb;	state Exp;
branches;
next	1.58;

1.58
date	2015.01.17.19.24.38;	author eb;	state Exp;
branches;
next	1.57;

1.57
date	2015.01.17.19.24.17;	author eb;	state Exp;
branches;
next	1.56;

1.56
date	2015.01.17.19.22.51;	author eb;	state Exp;
branches;
next	1.55;

1.55
date	2015.01.17.19.22.06;	author eb;	state Exp;
branches;
next	1.54;

1.54
date	2015.01.17.19.22.00;	author eb;	state Exp;
branches;
next	1.53;

1.53
date	2015.01.17.19.21.46;	author eb;	state Exp;
branches;
next	1.52;

1.52
date	2015.01.17.19.20.47;	author eb;	state Exp;
branches;
next	1.51;

1.51
date	2015.01.17.19.20.08;	author eb;	state Exp;
branches;
next	1.50;

1.50
date	2015.01.17.19.19.44;	author eb;	state Exp;
branches;
next	1.49;

1.49
date	2015.01.17.19.19.31;	author eb;	state Exp;
branches;
next	1.48;

1.48
date	2015.01.17.19.19.12;	author eb;	state Exp;
branches;
next	1.47;

1.47
date	2015.01.17.19.18.28;	author eb;	state Exp;
branches;
next	1.46;

1.46
date	2015.01.17.19.18.07;	author eb;	state Exp;
branches;
next	1.45;

1.45
date	2015.01.17.19.17.32;	author eb;	state Exp;
branches;
next	1.44;

1.44
date	2015.01.17.19.14.01;	author eb;	state Exp;
branches;
next	1.43;

1.43
date	2015.01.17.19.12.16;	author eb;	state Exp;
branches;
next	1.42;

1.42
date	2015.01.17.19.11.55;	author eb;	state Exp;
branches;
next	1.41;

1.41
date	2015.01.17.19.11.18;	author eb;	state Exp;
branches;
next	1.40;

1.40
date	2015.01.17.19.10.27;	author eb;	state Exp;
branches;
next	1.39;

1.39
date	2015.01.17.19.09.08;	author eb;	state Exp;
branches;
next	1.38;

1.38
date	2015.01.17.19.08.59;	author eb;	state Exp;
branches;
next	1.37;

1.37
date	2015.01.17.19.07.16;	author eb;	state Exp;
branches;
next	1.36;

1.36
date	2015.01.17.19.07.04;	author eb;	state Exp;
branches;
next	1.35;

1.35
date	2015.01.17.19.06.50;	author eb;	state Exp;
branches;
next	1.34;

1.34
date	2015.01.17.19.06.47;	author eb;	state Exp;
branches;
next	1.33;

1.33
date	2015.01.17.19.06.35;	author eb;	state Exp;
branches;
next	1.32;

1.32
date	2015.01.17.19.05.49;	author eb;	state Exp;
branches;
next	1.31;

1.31
date	2015.01.17.19.05.40;	author eb;	state Exp;
branches;
next	1.30;

1.30
date	2015.01.17.19.05.29;	author eb;	state Exp;
branches;
next	1.29;

1.29
date	2015.01.17.19.05.23;	author eb;	state Exp;
branches;
next	1.28;

1.28
date	2015.01.17.19.05.11;	author eb;	state Exp;
branches;
next	1.27;

1.27
date	2015.01.17.19.05.03;	author eb;	state Exp;
branches;
next	1.26;

1.26
date	2015.01.17.19.04.51;	author eb;	state Exp;
branches;
next	1.25;

1.25
date	2015.01.17.19.04.44;	author eb;	state Exp;
branches;
next	1.24;

1.24
date	2015.01.17.19.02.41;	author eb;	state Exp;
branches;
next	1.23;

1.23
date	2015.01.17.19.02.14;	author eb;	state Exp;
branches;
next	1.22;

1.22
date	2015.01.17.19.01.58;	author eb;	state Exp;
branches;
next	1.21;

1.21
date	2015.01.17.18.58.58;	author eb;	state Exp;
branches;
next	1.20;

1.20
date	2015.01.17.18.57.56;	author eb;	state Exp;
branches;
next	1.19;

1.19
date	2015.01.17.18.57.00;	author eb;	state Exp;
branches;
next	1.18;

1.18
date	2015.01.17.18.56.54;	author eb;	state Exp;
branches;
next	1.17;

1.17
date	2015.01.17.18.53.58;	author eb;	state Exp;
branches;
next	1.16;

1.16
date	2015.01.17.18.53.44;	author eb;	state Exp;
branches;
next	1.15;

1.15
date	2015.01.17.18.53.36;	author eb;	state Exp;
branches;
next	1.14;

1.14
date	2015.01.17.18.53.25;	author eb;	state Exp;
branches;
next	1.13;

1.13
date	2015.01.17.18.53.07;	author eb;	state Exp;
branches;
next	1.12;

1.12
date	2015.01.17.18.52.47;	author eb;	state Exp;
branches;
next	1.11;

1.11
date	2015.01.17.18.52.43;	author eb;	state Exp;
branches;
next	1.10;

1.10
date	2015.01.17.18.49.41;	author eb;	state Exp;
branches;
next	1.9;

1.9
date	2015.01.17.18.49.27;	author eb;	state Exp;
branches;
next	1.8;

1.8
date	2015.01.17.18.48.46;	author eb;	state Exp;
branches;
next	1.7;

1.7
date	2015.01.17.18.48.15;	author eb;	state Exp;
branches;
next	1.6;

1.6
date	2015.01.17.18.48.07;	author eb;	state Exp;
branches;
next	1.5;

1.5
date	2015.01.17.18.47.58;	author eb;	state Exp;
branches;
next	1.4;

1.4
date	2015.01.17.18.47.12;	author eb;	state Exp;
branches;
next	1.3;

1.3
date	2015.01.17.18.45.03;	author eb;	state Exp;
branches;
next	1.2;

1.2
date	2015.01.17.18.41.56;	author eb;	state Exp;
branches;
next	1.1;

1.1
date	2015.01.05.03.16.09;	author eb;	state Exp;
branches;
next	;


desc
@vim
@


1.122
log
@vim
@
text
@require 'rubygems'
require 'nokogiri'
require 'colorize'
doc = Nokogiri::XML(File.open("combined.xlf"))
#puts @@doc.xpath("//trans-unit//source")
#puts @@doc.css("trans-unit source")

transunit = "xliff/file/body/trans-unit"

source = Array.new
target = Array.new

doc.xpath("#{transunit}").each do |node|
  
  id = node['id']
  translate = node['translate']
  source = node.xpath("./source").text
  target = node.xpath("./target").text

end

simple = "tests/simple.txt"
lines = IO.readlines(simple)
lines.each do |line|
  test = line.split("\t")
  source.each do |test|
     puts test
end
end
@


1.121
log
@vim
@
text
@d10 3
a20 2

puts source
@


1.120
log
@vim
@
text
@d14 1
a14 1
  $source = node.xpath("./source").text
d19 2
d25 1
a25 1
  $source.each do |test|
@


1.119
log
@vim
@
text
@d14 1
a14 1
  @@source = node.xpath("./source").text
d23 1
a23 1
  @@source.each do |test|
@


1.118
log
@vim
@
text
@d23 1
a23 1
   source.each do |test|
@


1.117
log
@vim
@
text
@d14 1
a14 1
  source = node.xpath("./source").text
@


1.116
log
@vim
@
text
@d26 1
@


1.115
log
@vim
@
text
@d23 2
@


1.114
log
@vim
@
text
@a22 1
  puts test
@


1.113
log
@vim
@
text
@d23 1
a23 1
puts test
@


1.112
log
@vim
@
text
@d23 1
a23 1

@


1.111
log
@vim
@
text
@a16 1
puts target
@


1.110
log
@vim
@
text
@d14 2
a15 2
  source << node.xpath("./source").text
  target << node.xpath("./target").text
@


1.109
log
@vim
@
text
@a24 5
print target[4]
##target.each do |target|
#target.gsub(/(#{test[0]})/, 'HAHAHAHAHAHAHA')
#puts "lol"
##end
@


1.108
log
@vim
@
text
@a8 2
source = doc.xpath("#{transunit}/source").text
target << doc.xpath("#{transunit}/target").text
d17 1
@


1.107
log
@vim
@
text
@d10 1
a10 1
target = doc.xpath("#{transunit}/target").text
@


1.106
log
@vim
@
text
@d26 1
a26 1
print target[0]
@


1.105
log
@vim
@
text
@d26 1
a26 1
print target
@


1.104
log
@vim
@
text
@d26 5
a30 4
target.each do |target|
target.gsub(/(#{test[0]})/, 'HAHAHAHAHAHAHA')
puts "lol"
end
@


1.103
log
@vim
@
text
@d10 1
d17 1
a17 1
  target2 << node.xpath("./target").text
d26 2
a27 2
#target.each do |target|
#target.gsub(/(#{test[0]})/, 'HAHAHAHAHAHAHA')
d29 1
a29 1
#end
@


1.102
log
@vim
@
text
@d16 1
a16 1
  target << node.xpath("./target").text
@


1.101
log
@vim
@
text
@d25 2
a26 2
target.each do |target|
target.gsub(/(#{test[0]})/, 'HAHAHAHAHAHAHA')
d28 1
a28 1
end
@


1.100
log
@vim
@
text
@d16 1
a16 1
  $target << node.xpath("./target").text
@


1.99
log
@vim
@
text
@a7 4
source = ''
$target = ''
test = ''

d25 2
a26 2
$target.each do |target|
$target.gsub(/(#{test[0]})/, 'HAHAHAHAHAHAHA')
@


1.98
log
@vim
@
text
@d9 1
a9 1
# target = ''
d20 1
a20 1
  target << node.xpath("./target").text
d29 3
a31 3
target.each do |target|
 target.gsub(/(#{test[0]})/, 'HAHAHAHAHAHAHA')
 puts "lol"
@


1.97
log
@vim
@
text
@d9 1
a9 1
target = ''
@


1.96
log
@vim
@
text
@d23 1
@


1.95
log
@vim
@
text
@d32 1
@


1.94
log
@vim
@
text
@d27 4
a30 4
print test[0]
#target.each do |target|
# target.gsub(/(#{test})/, 'HAHAHAHAHAHAHA')
# puts "lol"
@


1.93
log
@vim
@
text
@d27 1
a27 1
print test[0..0]
@


1.92
log
@vim
@
text
@d27 1
a27 1
print test
@


1.91
log
@vim
@
text
@d26 5
a30 5
test = line.split("\t")
target.each do |target|
 target.gsub(/(#{test})/, 'HAHAHAHAHAHAHA')
 puts "lol"
end
@


1.90
log
@vim
@
text
@d26 1
a26 1
test << line.split("\t")
@


1.89
log
@vim
@
text
@d26 1
a26 1
  test << line.split("\t")
@


1.88
log
@vim
@
text
@d10 1
a10 1

@


1.87
log
@vim
@
text
@d28 1
a28 1
 (target.gsub(/(#{test})/, 'HAHAHAHAHAHAHA'))
@


1.86
log
@vim
@
text
@d23 1
a23 1
simple = 'tests/simple.txt'
@


1.85
log
@vim
@
text
@d23 1
@


1.84
log
@vim
@
text
@a30 1
end
@


1.83
log
@vim
@
text
@a22 1
print source
d27 1
a27 1
 if (target.gsub(/(#{test})/, 'HAHAHAHAHAHAHA'))
@


1.82
log
@vim
@
text
@d29 1
a29 1
    puts target, "\n\n"
@


1.81
log
@vim
@
text
@d28 1
a28 1
 if (target.gsub(/(#{test})/, 'lol$1lol'))
@


1.80
log
@vim
@
text
@d29 1
a29 1
    puts target, "\n"
@


1.79
log
@vim
@
text
@d29 1
a29 1
    puts target
@


1.78
log
@vim
@
text
@d28 1
a28 1
 if (target.gsub(/(#{test})/, 'lol$1lol')
@


1.77
log
@vim
@
text
@a23 1
simple = "tests/simple.txt"
d28 1
a28 1
 if (target =~ /#{test}/)
@


1.76
log
@vim
@
text
@d33 1
@


1.75
log
@vim
@
text
@d29 1
a29 1
 if (target =~ /#{test}/) {
d31 1
a31 2
}

@


1.74
log
@vim
@
text
@d27 6
a32 2
  test = line.split("\t")
  print target
@


1.73
log
@vim
@
text
@d19 1
a19 1
  source = node.xpath("./source").text
d27 2
a28 1
test = line.split("\t")
@


1.72
log
@vim
@
text
@d23 1
a23 1
print target
@


1.71
log
@vim
@
text
@d23 1
a23 1

@


1.70
log
@vim
@
text
@a27 5
  target.each do |lol|
    if ( lol =~ /#{line}/)
      puts "#{line}".red
end
end
@


1.69
log
@vim
@
text
@d20 1
a20 1
  target = node.xpath("./target").text
a22 1
puts target[3..9]
d24 10
a33 10
#simple = "tests/simple.txt"
#lines = IO.readlines(simple)
#lines.each do |line|
#test = line.split("\t")
#  target.each do |lol|
#    if ( lol =~ /#{line}/)
#      puts "#{line}".red
#end
#end
#end
@


1.68
log
@vim
@
text
@d23 1
a23 1
puts target
@


1.67
log
@vim
@
text
@d23 1
d25 10
a34 10
simple = "tests/simple.txt"
lines = IO.readlines(simple)
lines.each do |line|
test = line.split("\t")
  target.each do |lol|
    if ( lol =~ /#{line}/)
      puts "#{line}".red
end
end
end
@


1.66
log
@vim
@
text
@d20 1
a20 1
  $target = node.xpath("./target").text
d28 1
a28 1
  $target.each do |lol|
@


1.65
log
@vim
@
text
@d8 4
@


1.64
log
@vim
@
text
@d16 1
a16 1
  target = node.xpath("./target").text
d24 1
a24 1
  target.each do |lol|
@


1.63
log
@vim
@
text
@d16 1
a16 1
 @@target = node.xpath("./target").text
d24 1
a24 1
  @@target.each do |lol|
@


1.62
log
@vim
@
text
@d16 1
a16 1
  target = node.xpath("./target").text
d24 1
a24 1
  target.each do |lol|
@


1.61
log
@vim
@
text
@d29 1
@


1.60
log
@vim
@
text
@d25 1
a25 1
    if ( lol =~ /#{line}/
@


1.59
log
@vim
@
text
@a22 1
puts "This is a line:", line 
d24 4
a27 1
puts "This is a sth", test
@


1.58
log
@vim
@
text
@d24 1
a24 1
test = line.split('\t')
@


1.57
log
@vim
@
text
@d24 1
a24 1
test = lines.split('\t')
@


1.56
log
@vim
@
text
@d24 1
a24 1
test = split('\t')
@


1.55
log
@vim
@
text
@d24 2
@


1.54
log
@vim
@
text
@d24 1
@


1.53
log
@vim
@
text
@a23 3
 end
  end
end
@


1.52
log
@vim
@
text
@d23 2
a24 9
  field = line.split('\t')
    array = Array["Google", "Chrome", "YouTube"]   
      array.each do |target|
print field[0..0]
        if ( target =~ /#{field[0]}/ )
          puts "matched"
abort("\nlol")

    end
@


1.51
log
@vim
@
text
@d29 1
a29 1
die
@


1.50
log
@vim
@
text
@d29 1
a29 1

@


1.49
log
@vim
@
text
@d26 1
a26 1
print field[0]
@


1.48
log
@vim
@
text
@d26 1
a26 1
print field[0..1]
@


1.47
log
@vim
@
text
@d26 1
a26 1
print field[0]
@


1.46
log
@vim
@
text
@d26 1
@


1.45
log
@vim
@
text
@d24 1
a24 1
    array = Array.new("Google", "Chrome", "YouTube")   
@


1.44
log
@vim
@
text
@d24 1
a24 1
    array = "Aktiver", "fisk", "erer"    
d28 2
@


1.43
log
@vim
@
text
@d24 6
a29 7
puts field[0]
array = "Aktiver", "fisk", "erer"    
    array.each do |target|
         if ( target =~ /#{field[0]}/ )
             puts "matched"
end
end
@


1.42
log
@vim
@
text
@d24 1
a24 1
puts field  
@


1.41
log
@vim
@
text
@d24 1
d26 1
a26 2
puts array 
 array.each do |target|
@


1.40
log
@vim
@
text
@d16 1
a16 1
  $target = node.xpath("./target").text
d25 2
a26 2

  array.each do |target|
@


1.39
log
@vim
@
text
@d24 3
a26 1
      $target.each do |target|
@


1.38
log
@vim
@
text
@d28 2
a29 1

@


1.37
log
@vim
@
text
@d4 1
a4 1
doc = Nokogiri::XML(File.open("test1.xlf"))
a19 2
puts $target

d24 3
@


1.36
log
@vim
@
text
@d20 1
a20 1
puts target
@


1.35
log
@vim
@
text
@d16 1
a16 1
  target = node.xpath("./target").text
@


1.34
log
@vim
@
text
@d4 1
a4 1
@@doc = Nokogiri::XML(File.open("test1.xlf"))
@


1.33
log
@vim
@
text
@d9 1
a9 1
source = @@doc.xpath("#{transunit}/source").text
@


1.32
log
@vim
@
text
@d11 1
a11 1
@@doc.xpath("#{transunit}").each do |node|
a17 1
puts target
@


1.31
log
@vim
@
text
@d18 1
@


1.30
log
@vim
@
text
@d20 1
a20 2

putputsget
a25 1
puts target
@


1.29
log
@vim
@
text
@d27 1
a27 1
print target
@


1.28
log
@vim
@
text
@d19 4
a22 1
print target
@


1.27
log
@vim
@
text
@d19 1
a19 1

@


1.26
log
@vim
@
text
@a24 5
#  target.each do |targ|
#    if ( target =~ /#{field[0]}/ )
#      puts targ    
    end
  end
@


1.25
log
@vim
@
text
@d28 1
a28 1
#    end
@


1.24
log
@vim
@
text
@d24 5
a28 4
  target.each do |targ|
    if ( target =~ /#{field[0]}/ )
      puts targ    
    end
@


1.23
log
@vim
@
text
@d24 1
a24 1
  target.each do |target|
d26 1
a26 1
      puts target    
@


1.22
log
@vim
@
text
@d27 2
a28 1
end
@


1.21
log
@vim
@
text
@d24 5
a28 2
field.each do |field|
  
a29 1
end
@


1.20
log
@vim
@
text
@d23 4
a26 3
  array = line.split('\t')
  print array
  print source
@


1.19
log
@vim
@
text
@d23 3
a25 2
array = line.split('\t')
print array
@


1.18
log
@vim
@
text
@d24 1
a24 1
print array[1]
@


1.17
log
@vim
@
text
@d23 2
a24 2
line.split('\t').puts    

@


1.16
log
@vim
@
text
@d23 1
a23 1
puts line.split('\t')
@


1.15
log
@vim
@
text
@d23 2
a24 1
line.split('\t')
@


1.14
log
@vim
@
text
@d23 1
a23 3
test = line.split('\t')
puts test 

@


1.13
log
@vim
@
text
@d23 1
a23 1
line.split('\t').each test
@


1.12
log
@vim
@
text
@d23 3
a25 1
line.split('\t').each 
@


1.11
log
@vim
@
text
@a23 1
puts line.join('  ')
@


1.10
log
@vim
@
text
@d23 1
a23 2
line.split('\t')
line.values_at(0, 1)
@


1.9
log
@vim
@
text
@d24 1
a24 1
line.values_at(0)
@


1.8
log
@vim
@
text
@d24 2
a25 1
puts line
@


1.7
log
@vim
@
text
@a16 1
  puts target.red
d19 1
a19 2
simple
def simple
a24 1
end
@


1.6
log
@vim
@
text
@d20 1
a20 1

@


1.5
log
@vim
@
text
@d28 1
@


1.4
log
@vim
@
text
@d25 2
a26 1
      p line
@


1.3
log
@vim
@
text
@d22 5
a26 3
f = File.new("
line.split("\t").each ...

@


1.2
log
@vim
@
text
@d21 3
@


1.1
log
@vim
@
text
@d3 1
d17 1
a17 1
  puts target
d20 2
@
